name: Accessibility Testing

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  lighthouse-ci:
    name: Lighthouse Accessibility Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm install -g @lhci/cli@0.13.x
          npm install

      - name: Build application
        run: cargo build --release

      - name: Start server
        run: |
          cargo run --release &
          echo $! > server.pid
          # Wait for server to be ready
          sleep 10
          curl --retry 10 --retry-connrefused http://localhost:8080/

      - name: Run Lighthouse CI
        run: lhci autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

      - name: Stop server
        if: always()
        run: |
          if [ -f server.pid ]; then
            kill $(cat server.pid) || true
            rm server.pid
          fi

      - name: Upload Lighthouse results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: lighthouse-results
          path: .lighthouseci/
          retention-days: 30

  axe-core:
    name: axe-core Accessibility Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2

      - name: Install Playwright
        run: |
          npm install -D @playwright/test @axe-core/playwright
          npx playwright install --with-deps chromium

      - name: Build application
        run: cargo build --release

      - name: Start server
        run: |
          cargo run --release &
          echo $! > server.pid
          sleep 10
          curl --retry 10 --retry-connrefused http://localhost:8080/

      - name: Run axe-core tests
        run: npx playwright test tests/accessibility/ --reporter=html
        continue-on-error: false

      - name: Stop server
        if: always()
        run: |
          if [ -f server.pid ]; then
            kill $(cat server.pid) || true
            rm server.pid
          fi

      - name: Upload axe results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: axe-results
          path: playwright-report/
          retention-days: 30
