<story-context id="bmad/bmm/workflows/4-implementation/story-context/template" v="1.0">
  <metadata>
    <epicId>9</epicId>
    <storyId>9.6</storyId>
    <title>Add Week Selector to Shopping List Page</title>
    <status>Approved</status>
    <generatedAt>2025-10-26</generatedAt>
    <generator>BMAD Story Context Workflow</generator>
    <sourceStoryPath>/home/snapiz/projects/github/timayz/imkitchen/docs/stories/story-9.6.md</sourceStoryPath>
  </metadata>

  <story>
    <asA>frontend developer</asA>
    <iWant>add week dropdown to shopping list</iWant>
    <soThat>users can view shopping lists for different weeks</soThat>
    <tasks>
      - Add week selector dropdown to shopping list template
      - Set default selection to current week
      - Integrate TwinSpark for week selection
      - Format dropdown options with dates
      - Add lock icon to current week option
      - Display week start date in shopping list header
      - Implement mobile-responsive dropdown
      - Backend integration
      - Create shopping list content wrapper
      - Responsive design and styling
      - Integration testing
    </tasks>
  </story>

  <acceptanceCriteria>
    <criterion id="9.6.1">Shopping list page updated at `templates/shopping/shopping_list.html` with week selector</criterion>
    <criterion id="9.6.2">Week selector: dropdown (select element) showing all weeks (Week 1, Week 2, ..., Week N)</criterion>
    <criterion id="9.6.3">Current week selected by default (selected attribute on option)</criterion>
    <criterion id="9.6.4">Changing selection triggers: `ts-req="/shopping?week_id={value}"` with `ts-target="#shopping-list-content"` and `ts-swap="innerHTML"` and `ts-trigger="change"`</criterion>
    <criterion id="9.6.5">Dropdown options show week dates: "Week 1 (Oct 28 - Nov 3)", "Week 2 (Nov 4 - Nov 10)"</criterion>
    <criterion id="9.6.6">Locked weeks marked with ðŸ”’ icon in dropdown options (prepended to text)</criterion>
    <criterion id="9.6.7">Shopping list displays week start date at top: "Shopping List for Week of {Monday date}"</criterion>
    <criterion id="9.6.8">Mobile: Dropdown full-width (w-full), easy to tap (min-height 44px)</criterion>
    <criterion id="9.6.9">Playwright test verifies week selection updates shopping list content without page reload</criterion>
  </acceptanceCriteria>

  <artifacts>
    <docs>
      <doc>
        <path>docs/tech-spec-epic-9.md</path>
        <title>Story 9.6: Add Week Selector to Shopping List Page</title>
        <section>AC-9.6.1 through AC-9.6.9</section>
        <snippet>Shopping list page updated with week selector dropdown. Select element with all weeks, current week selected by default. TwinSpark triggers GET /shopping?week_id={value} on change, swaps #shopping-list-content. Options formatted with dates "Week 1 (Oct 28 - Nov 3)". Locked weeks marked with ðŸ”’ icon.</snippet>
      </doc>
      <doc>
        <path>docs/tech-spec-epic-9.md</path>
        <title>Workflow 5: Shopping List Week Selection</title>
        <section>Workflows and Sequencing</section>
        <snippet>User opens /shopping (defaults to current week) â†’ User selects "Week 2 (Nov 4)" from dropdown â†’ TwinSpark GET /shopping?week_id=week_2_id â†’ Backend queries shopping list for Week 2 â†’ Returns HTML fragment â†’ TwinSpark swaps #shopping-list-content â†’ Display Week 2 shopping list (no page reload)</snippet>
      </doc>
    </docs>
    <code>
      <artifact>
        <path>templates/pages/shopping-list.html</path>
        <kind>template</kind>
        <symbol>shopping-list</symbol>
        <lines>N/A</lines>
        <reason>Existing shopping list template to be updated with week selector dropdown.</reason>
      </artifact>
      <artifact>
        <path>templates/partials/shopping-list-content.html</path>
        <kind>partial</kind>
        <symbol>shopping-list-content</symbol>
        <lines>N/A</lines>
        <reason>Shopping list content partial for TwinSpark updates. Contains category groups and items.</reason>
      </artifact>
    </code>
    <dependencies>
      <rust>
        <package name="axum" version="0.8">Route handler for GET /shopping?week_id={week_id}</package>
      </rust>
      <frontend>
        <library name="TwinSpark">Dropdown with ts-req, ts-target, ts-swap, ts-trigger="change" for partial updates</library>
      </frontend>
    </dependencies>
  </artifacts>

  <constraints>
    <constraint>Progressive Enhancement: Shopping list works without JavaScript (dropdown submits form). TwinSpark enhances with partial updates.</constraint>
    <constraint>URL State Management: Week ID in URL query parameter for bookmarking. TwinSpark ts-req-history="replace" updates URL.</constraint>
    <constraint>Mobile-First Design: Dropdown optimized for touch interaction. Full-width on mobile, max-width on desktop.</constraint>
  </constraints>

  <interfaces>
    <interface>
      <name>GET /shopping</name>
      <kind>route</kind>
      <signature>async fn get_shopping_list(Query(params): Query&lt;ShoppingListParams&gt;, State(state): State&lt;AppState&gt;, user: User) -> Result&lt;Html&lt;String&gt;, AppError&gt;</signature>
      <path>Existing shopping routes</path>
      <description>Returns shopping list for current week (default) or specified week_id query parameter. Returns full page or HTML fragment based on TwinSpark header.</description>
    </interface>
    <interface>
      <name>ShoppingListView</name>
      <kind>struct</kind>
      <signature>pub struct ShoppingListView { pub week_id: String, pub start_date: NaiveDate, pub categories: Vec&lt;ShoppingCategoryView&gt; }</signature>
      <path>Epic 8 domain models</path>
      <description>Read model for shopping list. Contains week_id, start_date for header display, and categorized items.</description>
    </interface>
  </interfaces>

  <tests>
    <standards>
      Playwright integration tests verify week selection and content update. Test dropdown selection triggers TwinSpark request, shopping list updates without page reload. Verify URL parameter updated for bookmarking. Accessibility tests verify dropdown keyboard navigation and labels.
    </standards>
    <locations>
      - Playwright E2E tests for shopping list week selection
      - Story 9.7 accessibility tests for dropdown compliance
    </locations>
    <ideas>
      <test ac="9.6.1">Verify `templates/shopping/shopping_list.html` updated with week selector</test>
      <test ac="9.6.2">Test: Dropdown populated with all weeks (Week 1, Week 2, etc.)</test>
      <test ac="9.6.3">Test: Current week option has selected attribute</test>
      <test ac="9.6.4">Playwright test: Change dropdown â†’ TwinSpark GET /shopping?week_id={value} â†’ #shopping-list-content updated</test>
      <test ac="9.6.5">Test: Options formatted as "Week 1 (Oct 28 - Nov 3)"</test>
      <test ac="9.6.6">Test: Locked week option text includes "ðŸ”’ Week 1 (Oct 28 - Nov 3)"</test>
      <test ac="9.6.7">Test: Header displays "Shopping List for Week of October 28"</test>
      <test ac="9.6.8">Responsive test: Mobile (375px) dropdown w-full, min-height 44px</test>
      <test ac="9.6.9">Playwright test: Select Week 2 â†’ Verify shopping list content updates, URL includes ?week_id=week_2_id</test>
    </ideas>
  </tests>
</story-context>
