<story-context id="bmad/bmm/workflows/4-implementation/story-context/template" v="1.0">
  <metadata>
    <epicId>9</epicId>
    <storyId>9.4</storyId>
    <title>Update Recipe Creation Form with Accompaniment Fields</title>
    <status>Approved</status>
    <generatedAt>2025-10-26</generatedAt>
    <generator>BMAD Story Context Workflow</generator>
    <sourceStoryPath>/home/snapiz/projects/github/timayz/imkitchen/docs/stories/story-9.4.md</sourceStoryPath>
  </metadata>

  <story>
    <asA>frontend developer</asA>
    <iWant>add accompaniment settings to recipe creation form</iWant>
    <soThat>users can configure main courses to accept sides</soThat>
    <tasks>
      - Update recipe form template structure
      - Implement recipe type selection
      - Add accompaniment acceptance checkbox
      - Add preferred accompaniment categories
      - Add accompaniment category radio buttons
      - Implement cuisine selection
      - Add dietary tags checkboxes
      - Configure form submission
      - Implement validation
      - Progressive disclosure with JavaScript/TwinSpark
      - Responsive design and styling
      - Integration testing
    </tasks>
  </story>

  <acceptanceCriteria>
    <criterion id="9.4.1">Recipe form updated at `templates/recipes/create_recipe.html` to include new fields</criterion>
    <criterion id="9.4.2">Recipe type selection includes "Accompaniment" option (radio buttons: Appetizer, Main Course, Dessert, Accompaniment)</criterion>
    <criterion id="9.4.3">For Main Course: checkbox "This dish accepts an accompaniment" (name="accepts_accompaniment")</criterion>
    <criterion id="9.4.4">If checked: show preferred categories checkboxes (Pasta, Rice, Fries, Salad, Bread, Vegetable, Other)</criterion>
    <criterion id="9.4.5">For Accompaniment type: show category radio buttons (same options as preferred categories)</criterion>
    <criterion id="9.4.6">Cuisine selection: dropdown with variants (Italian, Indian, Mexican, Chinese, etc.) + Custom text input</criterion>
    <criterion id="9.4.7">Dietary tags: checkbox list (Vegetarian, Vegan, Gluten-Free, Dairy-Free, Nut-Free, Halal, Kosher)</criterion>
    <criterion id="9.4.8">Form submission includes all new fields in POST body to `/recipes`</criterion>
    <criterion id="9.4.9">Validation: If recipe_type="accompaniment", category required (server-side validation)</criterion>
    <criterion id="9.4.10">Playwright test verifies form submission with new fields creates recipe with accompaniment data</criterion>
  </acceptanceCriteria>

  <artifacts>
    <docs>
      <doc>
        <path>docs/tech-spec-epic-9.md</path>
        <title>Story 9.4: Update Recipe Creation Form with Accompaniment Fields</title>
        <section>AC-9.4.1 through AC-9.4.10</section>
        <snippet>Recipe form updated with recipe type radios (Appetizer, Main Course, Dessert, Accompaniment), accepts_accompaniment checkbox, preferred categories checkboxes, accompaniment category radios, cuisine dropdown + custom input, dietary tags checkboxes. Progressive disclosure: show/hide fields based on selections.</snippet>
      </doc>
      <doc>
        <path>docs/tech-spec-epic-9.md</path>
        <title>Form Data Transfer Objects</title>
        <section>CreateRecipeForm DTO</section>
        <snippet>CreateRecipeForm includes recipe_type, accepts_accompaniment, preferred_accompaniments Vec, accompaniment_category Option, cuisine Option, custom_cuisine Option, dietary_tags Vec. Server-side validation ensures accompaniment_category required when recipe_type="accompaniment".</snippet>
      </doc>
    </docs>
    <code>
      <artifact>
        <path>templates/pages/recipe-form.html</path>
        <kind>template</kind>
        <symbol>recipe-form</symbol>
        <lines>N/A</lines>
        <reason>Existing recipe creation form to be updated with new accompaniment fields. Contains form structure, validation patterns, and submission handling.</reason>
      </artifact>
    </code>
    <dependencies>
      <rust>
        <package name="axum" version="0.8">Form handling with multipart encoding for image uploads</package>
        <package name="validator" version="0.20">Form validation with custom validators</package>
      </rust>
      <frontend>
        <library name="JavaScript/TwinSpark">Progressive disclosure: show/hide fields based on user selections</library>
      </frontend>
    </dependencies>
  </artifacts>

  <constraints>
    <constraint>Progressive Disclosure: Show/hide fields based on user selections (JavaScript or TwinSpark server-driven).</constraint>
    <constraint>Form Validation: HTML5 client-side + server-side validation. If accompaniment type, category required.</constraint>
    <constraint>Type-Safe Form Handling: Backend deserializes into CreateRecipeForm DTO with validation.</constraint>
    <constraint>CSRF Protection: Include CSRF token in all mutating forms.</constraint>
  </constraints>

  <interfaces>
    <interface>
      <name>POST /recipes</name>
      <kind>route</kind>
      <signature>async fn create_recipe(State(state): State&lt;AppState&gt;, user: User, Form(data): Form&lt;CreateRecipeForm&gt;) -> Result&lt;StatusCode, AppError&gt;</signature>
      <path>Existing recipe routes (Epic 6)</path>
      <description>Processes recipe creation form. Validates all fields including new accompaniment fields. Sends CreateRecipe command. Returns 303 redirect on success, 422 with errors on failure.</description>
    </interface>
  </interfaces>

  <tests>
    <standards>
      Playwright integration tests verify form submission with new fields creates recipe with correct accompaniment data. Test progressive disclosure (show/hide logic). Test validation: accompaniment type without category triggers server error.
    </standards>
    <locations>
      - Playwright E2E tests for recipe creation flow
      - Story 9.7 accessibility tests for form compliance
    </locations>
    <ideas>
      <test ac="9.4.1">Verify `templates/recipes/create_recipe.html` updated with new fields</test>
      <test ac="9.4.2">Test: Recipe type radios include Appetizer, Main Course, Dessert, Accompaniment</test>
      <test ac="9.4.3">Test: Main Course selected → Show "accepts_accompaniment" checkbox</test>
      <test ac="9.4.4">Test: "accepts_accompaniment" checked → Show preferred categories checkboxes</test>
      <test ac="9.4.5">Test: Accompaniment type selected → Show category radio buttons</test>
      <test ac="9.4.6">Test: Cuisine dropdown with options + Custom input revealed when "Custom" selected</test>
      <test ac="9.4.7">Test: Dietary tags checkboxes allow multiple selections</test>
      <test ac="9.4.8">Playwright test: Submit form with all new fields → Verify POST /recipes includes data</test>
      <test ac="9.4.9">Playwright test: Submit accompaniment without category → Verify 422 error with inline message</test>
      <test ac="9.4.10">Playwright test: Create main course with preferred=[Rice, Pasta] → Verify recipe saved correctly</test>
    </ideas>
  </tests>
</story-context>
